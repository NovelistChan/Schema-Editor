{"ast":null,"code":"var _jsxFileName = \"/Users/novelistchan/Documents/sddm-component/json-schema-editor/src/components/editor/components/MockSelect/index.js\";\nimport React from 'react';\nimport { Input, AutoComplete, Icon } from 'antd';\nimport PropTypes from 'prop-types';\nimport LocaleProvider from '../LocalProvider/index.js';\nconst Option = AutoComplete.Option;\nexport default class MockSelect extends React.Component {\n  constructor(props, context) {\n    super(props);\n    this.state = {\n      mock: ''\n    };\n    this.mock = context.Model.__jsonSchemaMock || [];\n  }\n\n  render() {\n    // const children = [];\n    const schema = this.props.schema;\n    const children = this.mock.map(item => React.createElement(Option, {\n      key: item.mock,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, item.mock));\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, React.createElement(AutoComplete, {\n      className: \"certain-category-search\",\n      dropdownMatchSelectWidth: false,\n      dataSource: children,\n      placeholder: LocaleProvider('mock'),\n      optionLabelProp: \"value\",\n      filterOption: true,\n      value: schema.mock ? schema.mock.mock : '',\n      onChange: this.props.onChange,\n      disabled: schema.type === 'object' || schema.type === 'array',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Input, {\n      addonAfter: React.createElement(Icon, {\n        type: \"edit\",\n        onClick: e => {\n          e.stopPropagation();\n          this.props.showEdit();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })));\n  }\n\n}\nMockSelect.propTypes = {\n  schema: PropTypes.object,\n  showEdit: PropTypes.func,\n  onChange: PropTypes.func\n};\nMockSelect.contextTypes = {\n  Model: PropTypes.object\n};","map":{"version":3,"sources":["/Users/novelistchan/Documents/sddm-component/json-schema-editor/src/components/editor/components/MockSelect/index.js"],"names":["React","Input","AutoComplete","Icon","PropTypes","LocaleProvider","Option","MockSelect","Component","constructor","props","context","state","mock","Model","__jsonSchemaMock","render","schema","children","map","item","onChange","type","e","stopPropagation","showEdit","propTypes","object","func","contextTypes"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,YAAhB,EAA8BC,IAA9B,QAA0C,MAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,MAAMC,MAAM,GAAGJ,YAAY,CAACI,MAA5B;AAEA,eAAe,MAAMC,UAAN,SAAyBP,KAAK,CAACQ,SAA/B,CAAyC;AACtDC,EAAAA,WAAW,CAACC,KAAD,EAAQC,OAAR,EAAiB;AAC1B,UAAMD,KAAN;AACA,SAAKE,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AADK,KAAb;AAGA,SAAKA,IAAL,GAAYF,OAAO,CAACG,KAAR,CAAcC,gBAAd,IAAkC,EAA9C;AACD;;AAQDC,EAAAA,MAAM,GAAG;AACP;AADO,UAECC,MAFD,GAEY,KAAKP,KAFjB,CAECO,MAFD;AAGP,UAAMC,QAAQ,GAAG,KAAKL,IAAL,CAAUM,GAAV,CAAeC,IAAD,IAAU,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEA,IAAI,CAACP,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAyBO,IAAI,CAACP,IAA9B,CAAxB,CAAjB;AAEA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD;AACE,MAAA,SAAS,EAAC,yBADZ;AAEE,MAAA,wBAAwB,EAAE,KAF5B;AAGE,MAAA,UAAU,EAAEK,QAHd;AAIE,MAAA,WAAW,EAAEb,cAAc,CAAC,MAAD,CAJ7B;AAKE,MAAA,eAAe,EAAC,OALlB;AAME,MAAA,YAAY,EAAE,IANhB;AAOE,MAAA,KAAK,EAAEY,MAAM,CAACJ,IAAP,GAAcI,MAAM,CAACJ,IAAP,CAAYA,IAA1B,GAAiC,EAP1C;AAQE,MAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWW,QARvB;AASE,MAAA,QAAQ,EAAEJ,MAAM,CAACK,IAAP,KAAgB,QAAhB,IAA4BL,MAAM,CAACK,IAAP,KAAgB,OATxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAWE,oBAAC,KAAD;AAAO,MAAA,UAAU,EAAE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,OAAO,EAAGC,CAAD,IAAO;AAACA,UAAAA,CAAC,CAACC,eAAF;AAAqB,eAAKd,KAAL,CAAWe,QAAX;AAAsB,SAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF,CADF;AAiBD;;AArCqD;AAAnClB,U,CASZmB,S,GAAY;AACjBT,EAAAA,MAAM,EAAEb,SAAS,CAACuB,MADD;AAEjBF,EAAAA,QAAQ,EAAErB,SAAS,CAACwB,IAFH;AAGjBP,EAAAA,QAAQ,EAAEjB,SAAS,CAACwB;AAHH,C;AA+BrBrB,UAAU,CAACsB,YAAX,GAA0B;AACxBf,EAAAA,KAAK,EAAEV,SAAS,CAACuB;AADO,CAA1B","sourcesContent":["import React from 'react';\nimport { Input, AutoComplete, Icon } from 'antd';\nimport PropTypes from 'prop-types';\nimport LocaleProvider from '../LocalProvider/index.js';\nconst Option = AutoComplete.Option;\n\nexport default class MockSelect extends React.Component {\n  constructor(props, context) {\n    super(props);\n    this.state = {\n      mock: ''\n    };\n    this.mock = context.Model.__jsonSchemaMock || [];\n  }\n\n  static propTypes = {\n    schema: PropTypes.object,\n    showEdit: PropTypes.func,\n    onChange: PropTypes.func\n  };\n\n  render() {\n    // const children = [];\n    const { schema } = this.props;\n    const children = this.mock.map((item) => <Option key={item.mock}>{item.mock}</Option>);\n\n    return (\n      <div>\n        <AutoComplete\n          className=\"certain-category-search\"\n          dropdownMatchSelectWidth={false}\n          dataSource={children}\n          placeholder={LocaleProvider('mock')}\n          optionLabelProp=\"value\"\n          filterOption={true}\n          value={schema.mock ? schema.mock.mock : ''}\n          onChange={this.props.onChange}\n          disabled={schema.type === 'object' || schema.type === 'array'}\n        >\n          <Input addonAfter={<Icon type=\"edit\" onClick={(e) => {e.stopPropagation(); this.props.showEdit()}} />} />\n        </AutoComplete>\n      </div>\n    );\n  }\n}\n\nMockSelect.contextTypes = {\n  Model: PropTypes.object\n};\n"]},"metadata":{},"sourceType":"module"}