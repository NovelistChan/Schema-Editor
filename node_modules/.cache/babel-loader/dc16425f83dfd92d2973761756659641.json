{"ast":null,"code":"var _jsxFileName = \"/Users/novelistchan/Documents/sddm-component/json-schema-editor/src/components/editor/components/SchemaComponents/SchemaJson.js\";\nimport React, { Component, PureComponent } from 'react';\nimport { Dropdown, Menu, Row, Col, Form, Select, Checkbox, Button, Icon, Input, Modal, message, Tooltip } from 'antd';\nimport FieldInput from './FieldInput';\nimport './schemaJson.css';\nimport _ from 'underscore';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { JSONPATH_JOIN_CHAR, SCHEMA_TYPE } from '../../utils.js';\nimport LocaleProvider from '../LocalProvider/index.js';\nimport utils from '../../utils';\nimport MockSelect from '../MockSelect/index.js';\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst TextArea = Input.TextArea;\nconst InputGroup = Input.Group;\n\nconst mapping = (name, data, showEdit, showAdv, metaSchema) => {\n  switch (data.type) {\n    case 'array':\n      return React.createElement(SchemaArray, {\n        prefix: name,\n        data: data,\n        showEdit: showEdit,\n        showAdv: showAdv,\n        metaSchema: metaSchema,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      });\n      break;\n\n    case 'object':\n      let nameArray = [].concat(name, 'properties');\n      return React.createElement(SchemaObject, {\n        prefix: nameArray,\n        data: data,\n        showEdit: showEdit,\n        showAdv: showAdv,\n        metaSchema: metaSchema,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n      break;\n\n    default:\n      return null;\n  }\n};\n\nclass SchemaArray extends PureComponent {\n  constructor(props, context) {\n    super(props);\n\n    this.handleChangeType = value => {\n      let prefix = this.getPrefix();\n      let key = [].concat(prefix, 'type');\n      this.Model.changeTypeAction({\n        key,\n        value\n      });\n    };\n\n    this.handleChangeDesc = e => {\n      let prefix = this.getPrefix();\n      let key = [].concat(prefix, \"description\");\n      let value = e.target.value;\n      this.Model.changeValueAction({\n        key,\n        value\n      });\n    };\n\n    this.handleChangeMock = e => {\n      let prefix = this.getPrefix();\n      let key = [].concat(prefix, \"mock\");\n      let value = e ? {\n        mock: e\n      } : '';\n      this.Model.changeValueAction({\n        key,\n        value\n      });\n    };\n\n    this.handleAddChildField = () => {\n      let prefix = this.getPrefix();\n      let keyArr = [].concat(prefix, 'properties');\n      this.Model.addChildFieldAction({\n        key: keyArr\n      });\n      this.Model.setOpenValueAction({\n        key: keyArr,\n        value: true\n      });\n    };\n\n    this.handleClickIcon = () => {\n      let prefix = this.getPrefix(); // 数据存储在 properties.name.properties下\n\n      let keyArr = [].concat(prefix, 'properties');\n      this.Model.setOpenValueAction({\n        key: keyArr\n      });\n    };\n\n    this.handleShowEdit = (name, type) => {\n      let prefix = this.getPrefix();\n      this.props.showEdit(prefix, name, this.props.data.items[name], type);\n    };\n\n    this.handleShowAdv = () => {\n      this.props.showAdv(this.getPrefix(), this.props.data.items);\n    };\n\n    this._tagPaddingLeftStyle = {};\n    this.Model = context.Model.schema;\n  }\n\n  componentWillMount() {\n    const prefix = this.props.prefix;\n    let length = prefix.filter(name => name != 'properties').length;\n    this.__tagPaddingLeftStyle = {\n      paddingLeft: \"\".concat(20 * (length + 1), \"px\")\n    };\n  }\n\n  getPrefix() {\n    return [].concat(this.props.prefix, 'items');\n  } // 修改数据类型\n\n\n  render() {\n    const _this$props = this.props,\n          data = _this$props.data,\n          prefix = _this$props.prefix,\n          showEdit = _this$props.showEdit,\n          showAdv = _this$props.showAdv,\n          metaSchema = _this$props.metaSchema;\n    const items = data.items;\n    let prefixArray = [].concat(prefix, 'items');\n    let prefixArrayStr = [].concat(prefixArray, 'properties').join(JSONPATH_JOIN_CHAR);\n    let showIcon = this.context.getOpenValue([prefixArrayStr]);\n    return !_.isUndefined(data.items) && React.createElement(\"div\", {\n      className: \"array-type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"array-item-type\",\n      type: \"flex\",\n      justify: \"space-around\",\n      align: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: this.context.isMock ? 10 : 12,\n      className: \"col-item name-item col-item-name\",\n      style: this.__tagPaddingLeftStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      justify: \"space-around\",\n      align: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 2,\n      className: \"down-style-col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, items.type === 'object' ? React.createElement(\"span\", {\n      className: \"down-style\",\n      onClick: this.handleClickIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, showIcon ? React.createElement(Icon, {\n      className: \"icon-object\",\n      type: \"caret-down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }) : React.createElement(Icon, {\n      className: \"icon-object\",\n      type: \"caret-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })) : null), React.createElement(Col, {\n      span: 22,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(Input, {\n      addonAfter: React.createElement(Checkbox, {\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }),\n      disabled: true,\n      value: \"Items\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 4,\n      className: \"col-item col-item-type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(Select, {\n      name: \"itemtype\",\n      className: \"type-select-style\",\n      onChange: this.handleChangeType,\n      value: items.customized || items.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    },\n    /*SCHEMA_TYPE*/\n    metaSchema.map((item, index) => {\n      return React.createElement(Option, {\n        value: item,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, item);\n    }))), this.context.isMock && React.createElement(Col, {\n      span: 3,\n      className: \"col-item col-item-mock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(MockSelect, {\n      schema: items,\n      showEdit: () => this.handleShowEdit('mock', items.type),\n      onChange: this.handleChangeMock,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })), React.createElement(Col, {\n      span: this.context.isMock ? 4 : 5,\n      className: \"col-item col-item-desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Input, {\n      addonAfter: React.createElement(Icon, {\n        type: \"edit\",\n        onClick: () => this.handleShowEdit('description'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }),\n      placeholder: LocaleProvider('description'),\n      value: items.description,\n      onChange: this.handleChangeDesc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), React.createElement(Col, {\n      span: 3,\n      className: \"col-item col-item-setting\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"adv-set\",\n      onClick: this.handleShowAdv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      placement: \"top\",\n      title: LocaleProvider('adv_setting'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"setting\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }))), items.type === 'object' ? React.createElement(\"span\", {\n      onClick: this.handleAddChildField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      placement: \"top\",\n      title: LocaleProvider('add_child_node'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      className: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }))) : null)), React.createElement(\"div\", {\n      className: \"option-formStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, mapping(prefixArray, items, showEdit, showAdv, metaSchema)));\n  }\n\n}\n\nSchemaArray.contextTypes = {\n  getOpenValue: PropTypes.func,\n  Model: PropTypes.object,\n  isMock: PropTypes.bool\n};\n\nclass SchemaItem extends PureComponent {\n  constructor(props, context) {\n    super(props);\n\n    this.handleChangeName = e => {\n      const _this$props2 = this.props,\n            data = _this$props2.data,\n            prefix = _this$props2.prefix,\n            name = _this$props2.name;\n      let value = e.target.value;\n\n      if (data.properties[value] && typeof data.properties[value] === 'object') {\n        return message.error(\"The field \\\"\".concat(value, \"\\\" already exists.\"));\n      }\n\n      this.Model.changeNameAction({\n        value,\n        prefix,\n        name\n      });\n    };\n\n    this.handleChangeDesc = e => {\n      let prefix = this.getPrefix();\n      let key = [].concat(prefix, 'description');\n      let value = e.target.value;\n      this.Model.changeValueAction({\n        key,\n        value\n      });\n    };\n\n    this.handleChangeMock = e => {\n      let prefix = this.getPrefix();\n      let key = [].concat(prefix, \"mock\");\n      let value = e ? {\n        mock: e\n      } : '';\n      this.Model.changeValueAction({\n        key,\n        value\n      });\n    };\n\n    this.handleChangeType = e => {\n      let prefix = this.getPrefix();\n      let key = [].concat(prefix, 'type');\n      this.Model.changeTypeAction({\n        key,\n        value: e\n      });\n    };\n\n    this.handleDeleteItem = () => {\n      const _this$props3 = this.props,\n            prefix = _this$props3.prefix,\n            name = _this$props3.name;\n      let nameArray = this.getPrefix();\n      this.Model.deleteItemAction({\n        key: nameArray\n      });\n      this.Model.enableRequireAction({\n        prefix,\n        name,\n        required: false\n      });\n    };\n\n    this.handleShowEdit = (editorName, type) => {\n      const _this$props4 = this.props,\n            data = _this$props4.data,\n            name = _this$props4.name,\n            showEdit = _this$props4.showEdit;\n      showEdit(this.getPrefix(), editorName, data.properties[name][editorName], type);\n    };\n\n    this.handleShowAdv = () => {\n      const _this$props5 = this.props,\n            data = _this$props5.data,\n            name = _this$props5.name,\n            showAdv = _this$props5.showAdv;\n      showAdv(this.getPrefix(), data.properties[name]);\n    };\n\n    this.handleAddField = () => {\n      const _this$props6 = this.props,\n            prefix = _this$props6.prefix,\n            name = _this$props6.name;\n      this.Model.addFieldAction({\n        prefix,\n        name\n      });\n    };\n\n    this.handleClickIcon = () => {\n      let prefix = this.getPrefix(); // 数据存储在 properties.xxx.properties 下\n\n      let keyArr = [].concat(prefix, 'properties');\n      this.Model.setOpenValueAction({\n        key: keyArr\n      });\n    };\n\n    this.handleEnableRequire = e => {\n      const _this$props7 = this.props,\n            prefix = _this$props7.prefix,\n            name = _this$props7.name;\n      let required = e.target.checked; // this.enableRequire(this.props.prefix, this.props.name, e.target.checked);\n\n      this.Model.enableRequireAction({\n        prefix,\n        name,\n        required\n      });\n    };\n\n    this._tagPaddingLeftStyle = {}; // this.num = 0\n\n    this.Model = context.Model.schema;\n  }\n\n  componentWillMount() {\n    const prefix = this.props.prefix;\n    let length = prefix.filter(name => name != 'properties').length;\n    this.__tagPaddingLeftStyle = {\n      paddingLeft: \"\".concat(20 * (length + 1), \"px\")\n    };\n  }\n\n  getPrefix() {\n    return [].concat(this.props.prefix, this.props.name);\n  } // 修改节点字段名\n\n\n  render() {\n    let _this$props8 = this.props,\n        name = _this$props8.name,\n        data = _this$props8.data,\n        prefix = _this$props8.prefix,\n        showEdit = _this$props8.showEdit,\n        showAdv = _this$props8.showAdv,\n        metaSchema = _this$props8.metaSchema;\n    let value = data.properties[name];\n    let prefixArray = [].concat(prefix, name);\n    let prefixStr = prefix.join(JSONPATH_JOIN_CHAR);\n    let prefixArrayStr = [].concat(prefixArray, 'properties').join(JSONPATH_JOIN_CHAR);\n    let show = this.context.getOpenValue([prefixStr]);\n    let showIcon = this.context.getOpenValue([prefixArrayStr]);\n    return show ? React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      justify: \"space-around\",\n      align: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: this.context.isMock ? 10 : 12,\n      className: \"col-item name-item col-item-name\",\n      style: this.__tagPaddingLeftStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      justify: \"space-around\",\n      align: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 2,\n      className: \"down-style-col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327\n      },\n      __self: this\n    }, value.type === 'object' ? React.createElement(\"span\", {\n      className: \"down-style\",\n      onClick: this.handleClickIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329\n      },\n      __self: this\n    }, showIcon ? React.createElement(Icon, {\n      className: \"icon-object\",\n      type: \"caret-down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331\n      },\n      __self: this\n    }) : React.createElement(Icon, {\n      className: \"icon-object\",\n      type: \"caret-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333\n      },\n      __self: this\n    })) : null), React.createElement(Col, {\n      span: 22,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(FieldInput, {\n      addonAfter: React.createElement(Tooltip, {\n        placement: \"top\",\n        title: LocaleProvider('required'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 341\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        onChange: this.handleEnableRequire,\n        checked: _.isUndefined(data.required) ? false : data.required.indexOf(name) != -1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 342\n        },\n        __self: this\n      })),\n      onChange: this.handleChangeName,\n      value: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 4,\n      className: \"col-item col-item-type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(Select, {\n      className: \"type-select-style\",\n      onChange: this.handleChangeType,\n      value: value.customized || value.type,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    },\n    /*SCHEMA_TYPE*/\n    metaSchema.map((item, index) => {\n      return React.createElement(Option, {\n        value: item,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, item);\n    }))), this.context.isMock && React.createElement(Col, {\n      span: 3,\n      className: \"col-item col-item-mock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376\n      },\n      __self: this\n    }, React.createElement(MockSelect, {\n      schema: value,\n      showEdit: () => this.handleShowEdit('mock', value.type),\n      onChange: this.handleChangeMock,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386\n      },\n      __self: this\n    })), React.createElement(Col, {\n      span: this.context.isMock ? 4 : 5,\n      className: \"col-item col-item-desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395\n      },\n      __self: this\n    }, React.createElement(Input, {\n      addonAfter: React.createElement(Icon, {\n        type: \"edit\",\n        onClick: () => this.handleShowEdit('description'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }),\n      placeholder: LocaleProvider('description'),\n      value: value.description,\n      onChange: this.handleChangeDesc,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396\n      },\n      __self: this\n    })), React.createElement(Col, {\n      span: 3,\n      className: \"col-item col-item-setting\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"adv-set\",\n      onClick: this.handleShowAdv,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      placement: \"top\",\n      title: LocaleProvider('adv_setting'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"setting\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408\n      },\n      __self: this\n    }))), React.createElement(\"span\", {\n      className: \"delete-item\",\n      onClick: this.handleDeleteItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"close\",\n      className: \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412\n      },\n      __self: this\n    })), value.type === 'object' ? React.createElement(DropPlus, {\n      prefix: prefix,\n      name: name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415\n      },\n      __self: this\n    }) : React.createElement(\"span\", {\n      onClick: this.handleAddField,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      placement: \"top\",\n      title: LocaleProvider('add_sibling_node'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      className: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"option-formStyle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, mapping(prefixArray, value, showEdit, showAdv, metaSchema))) : null;\n  }\n\n}\n\nSchemaItem.contextTypes = {\n  getOpenValue: PropTypes.func,\n  Model: PropTypes.object,\n  isMock: PropTypes.bool\n};\n\nclass SchemaObjectComponent extends Component {\n  shouldComponentUpdate(nextProps) {\n    if (_.isEqual(nextProps.data, this.props.data) && _.isEqual(nextProps.prefix, this.props.prefix) && _.isEqual(nextProps.open, this.props.open)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  render() {\n    const _this$props9 = this.props,\n          data = _this$props9.data,\n          prefix = _this$props9.prefix,\n          showEdit = _this$props9.showEdit,\n          showAdv = _this$props9.showAdv,\n          metaSchema = _this$props9.metaSchema;\n    return React.createElement(\"div\", {\n      className: \"object-style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452\n      },\n      __self: this\n    }, Object.keys(data.properties).map((name, index) => React.createElement(SchemaItem, {\n      key: index,\n      data: this.props.data,\n      name: name,\n      prefix: prefix,\n      showEdit: showEdit,\n      showAdv: showAdv,\n      metaSchema: metaSchema,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454\n      },\n      __self: this\n    })));\n  }\n\n}\n\nconst SchemaObject = connect(state => ({\n  open: state.schema.open\n}))(SchemaObjectComponent);\n\nconst DropPlus = (props, context) => {\n  const prefix = props.prefix,\n        name = props.name,\n        add = props.add;\n  const Model = context.Model.schema;\n  const menu = React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477\n    },\n    __self: this\n  }, React.createElement(Menu.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onClick: () => Model.addFieldAction({\n      prefix,\n      name\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479\n    },\n    __self: this\n  }, LocaleProvider('sibling_node'))), React.createElement(Menu.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    onClick: () => {\n      Model.setOpenValueAction({\n        key: [].concat(prefix, name, 'properties'),\n        value: true\n      });\n      Model.addChildFieldAction({\n        key: [].concat(prefix, name, 'properties')\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484\n    },\n    __self: this\n  }, LocaleProvider('child_node'))));\n  return React.createElement(Tooltip, {\n    placement: \"top\",\n    title: LocaleProvider('add_node'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 497\n    },\n    __self: this\n  }, React.createElement(Dropdown, {\n    overlay: menu,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    type: \"plus\",\n    className: \"plus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499\n    },\n    __self: this\n  })));\n};\n\nDropPlus.contextTypes = {\n  Model: PropTypes.object\n};\n\nconst SchemaJson = props => {\n  const item = mapping([], props.data, props.showEdit, props.showAdv, props.metaSchema);\n  return React.createElement(\"div\", {\n    className: \"schema-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511\n    },\n    __self: this\n  }, item);\n};\n\nexport default SchemaJson;","map":{"version":3,"sources":["/Users/novelistchan/Documents/sddm-component/json-schema-editor/src/components/editor/components/SchemaComponents/SchemaJson.js"],"names":["React","Component","PureComponent","Dropdown","Menu","Row","Col","Form","Select","Checkbox","Button","Icon","Input","Modal","message","Tooltip","FieldInput","_","connect","PropTypes","JSONPATH_JOIN_CHAR","SCHEMA_TYPE","LocaleProvider","utils","MockSelect","FormItem","Item","Option","TextArea","InputGroup","Group","mapping","name","data","showEdit","showAdv","metaSchema","type","nameArray","concat","SchemaArray","constructor","props","context","handleChangeType","value","prefix","getPrefix","key","Model","changeTypeAction","handleChangeDesc","e","target","changeValueAction","handleChangeMock","mock","handleAddChildField","keyArr","addChildFieldAction","setOpenValueAction","handleClickIcon","handleShowEdit","items","handleShowAdv","_tagPaddingLeftStyle","schema","componentWillMount","length","filter","__tagPaddingLeftStyle","paddingLeft","render","prefixArray","prefixArrayStr","join","showIcon","getOpenValue","isUndefined","isMock","customized","map","item","index","description","contextTypes","func","object","bool","SchemaItem","handleChangeName","properties","error","changeNameAction","handleDeleteItem","deleteItemAction","enableRequireAction","required","editorName","handleAddField","addFieldAction","handleEnableRequire","checked","prefixStr","show","indexOf","SchemaObjectComponent","shouldComponentUpdate","nextProps","isEqual","open","Object","keys","SchemaObject","state","DropPlus","add","menu","SchemaJson"],"mappings":"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","sourcesContent":["import React, { Component, PureComponent } from 'react';\nimport {\n  Dropdown,\n  Menu,\n  Row,\n  Col,\n  Form,\n  Select,\n  Checkbox,\n  Button,\n  Icon,\n  Input,\n  Modal,\n  message,\n  Tooltip\n} from 'antd';\nimport FieldInput from './FieldInput'\nimport './schemaJson.css';\nimport _ from 'underscore';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { JSONPATH_JOIN_CHAR, SCHEMA_TYPE } from '../../utils.js';\nimport LocaleProvider from '../LocalProvider/index.js';\nimport utils from '../../utils';\nimport MockSelect from '../MockSelect/index.js';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst { TextArea } = Input;\nconst InputGroup = Input.Group;\n\nconst mapping = (name, data, showEdit, showAdv, metaSchema) => {\n  switch (data.type) {\n    case 'array':\n      return <SchemaArray prefix={name} data={data} showEdit={showEdit} showAdv={showAdv} metaSchema={metaSchema} />;\n      break;\n    case 'object':\n      let nameArray = [].concat(name, 'properties');\n      return <SchemaObject prefix={nameArray} data={data} showEdit={showEdit} showAdv={showAdv} metaSchema={metaSchema} />;\n      break;\n    default:\n      return null;\n  }\n};\n\nclass SchemaArray extends PureComponent {\n  constructor(props, context) {\n    super(props);\n    this._tagPaddingLeftStyle = {};\n    this.Model = context.Model.schema;\n  }\n\n  componentWillMount() {\n    const { prefix } = this.props;\n    let length = prefix.filter(name => name != 'properties').length;\n    this.__tagPaddingLeftStyle = {\n      paddingLeft: `${20 * (length + 1)}px`\n    };\n  }\n\n  getPrefix() {\n    return [].concat(this.props.prefix, 'items');\n  }\n\n  // 修改数据类型\n  handleChangeType = value => {\n    let prefix = this.getPrefix();\n    let key = [].concat(prefix, 'type');\n    this.Model.changeTypeAction({ key, value });\n  };\n\n  // 修改备注信息\n  handleChangeDesc = e => {\n    let prefix = this.getPrefix();\n    let key = [].concat(prefix, `description`);\n    let value = e.target.value;\n    this.Model.changeValueAction({ key, value });\n  };\n\n  // 修改mock信息\n  handleChangeMock = e => {\n    let prefix = this.getPrefix();\n    let key = [].concat(prefix, `mock`);\n    let value = e ? { mock: e } : '';\n    this.Model.changeValueAction({ key, value });\n  };\n\n  // 增加子节点\n  handleAddChildField = () => {\n    let prefix = this.getPrefix();\n    let keyArr = [].concat(prefix, 'properties');\n    this.Model.addChildFieldAction({ key: keyArr });\n    this.Model.setOpenValueAction({ key: keyArr, value: true });\n  };\n\n  handleClickIcon = () => {\n    let prefix = this.getPrefix();\n    // 数据存储在 properties.name.properties下\n    let keyArr = [].concat(prefix, 'properties');\n    this.Model.setOpenValueAction({ key: keyArr });\n  };\n\n  handleShowEdit = (name, type) => {\n    let prefix = this.getPrefix();\n    this.props.showEdit(prefix, name, this.props.data.items[name], type);\n  };\n\n  handleShowAdv = () => {\n    this.props.showAdv(this.getPrefix(), this.props.data.items);\n  };\n\n  render() {\n    const { data, prefix, showEdit, showAdv, metaSchema } = this.props;\n    const items = data.items;\n    let prefixArray = [].concat(prefix, 'items');\n\n    let prefixArrayStr = [].concat(prefixArray, 'properties').join(JSONPATH_JOIN_CHAR);\n    let showIcon = this.context.getOpenValue([prefixArrayStr]);\n    return (\n      !_.isUndefined(data.items) && (\n        <div className=\"array-type\">\n          <Row className=\"array-item-type\" type=\"flex\" justify=\"space-around\" align=\"middle\">\n            <Col\n              span={this.context.isMock ? 10 : 12}\n              className=\"col-item name-item col-item-name\"\n              style={this.__tagPaddingLeftStyle}\n            >\n              <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n                <Col span={2} className=\"down-style-col\">\n                  {items.type === 'object' ? (\n                    <span className=\"down-style\" onClick={this.handleClickIcon}>\n                      {showIcon ? (\n                        <Icon className=\"icon-object\" type=\"caret-down\" />\n                      ) : (\n                          <Icon className=\"icon-object\" type=\"caret-right\" />\n                        )}\n                    </span>\n                  ) : null}\n                </Col>\n                <Col span={22}>\n                  <Input addonAfter={<Checkbox disabled />} disabled value=\"Items\" />\n                </Col>\n              </Row>\n            </Col>\n            <Col span={4} className=\"col-item col-item-type\">\n              <Select\n                name=\"itemtype\"\n                className=\"type-select-style\"\n                onChange={this.handleChangeType}\n                value={items.customized ||items.type}\n              >\n                {/*SCHEMA_TYPE*/metaSchema.map((item, index) => {\n                  return (\n                    <Option value={item} key={index}>\n                      {item}\n                    </Option>\n                  );\n                })}\n              </Select>\n            </Col>\n            {this.context.isMock && (\n              <Col span={3} className=\"col-item col-item-mock\">\n\n                <MockSelect\n                  schema={items}\n                  showEdit={() => this.handleShowEdit('mock', items.type)}\n                  onChange={this.handleChangeMock}\n                />\n              </Col>\n            )}\n            <Col span={this.context.isMock ? 4 : 5} className=\"col-item col-item-desc\">\n              <Input\n                addonAfter={<Icon type=\"edit\" onClick={() => this.handleShowEdit('description')} />}\n                placeholder={LocaleProvider('description')}\n                value={items.description}\n                onChange={this.handleChangeDesc}\n              />\n            </Col>\n            <Col span={3} className=\"col-item col-item-setting\">\n              <span className=\"adv-set\" onClick={this.handleShowAdv}>\n                <Tooltip placement=\"top\" title={LocaleProvider('adv_setting')}>\n                  <Icon type=\"setting\" />\n                </Tooltip>\n              </span>\n\n              {items.type === 'object' ? (\n                <span onClick={this.handleAddChildField}>\n                  <Tooltip placement=\"top\" title={LocaleProvider('add_child_node')}>\n                    <Icon type=\"plus\" className=\"plus\" />\n                  </Tooltip>\n                </span>\n              ) : null}\n            </Col>\n          </Row>\n          <div className=\"option-formStyle\">{mapping(prefixArray, items, showEdit, showAdv, metaSchema)}</div>\n        </div>\n      )\n    );\n  }\n}\n\nSchemaArray.contextTypes = {\n  getOpenValue: PropTypes.func,\n  Model: PropTypes.object,\n  isMock: PropTypes.bool\n};\n\nclass SchemaItem extends PureComponent {\n  constructor(props, context) {\n    super(props);\n    this._tagPaddingLeftStyle = {};\n    // this.num = 0\n    this.Model = context.Model.schema;\n  }\n\n  componentWillMount() {\n    const { prefix } = this.props;\n    let length = prefix.filter(name => name != 'properties').length;\n    this.__tagPaddingLeftStyle = {\n      paddingLeft: `${20 * (length + 1)}px`\n    };\n  }\n\n  getPrefix() {\n    return [].concat(this.props.prefix, this.props.name);\n  }\n\n  // 修改节点字段名\n  handleChangeName = e => {\n    const { data, prefix, name } = this.props;\n    let value = e.target.value;\n\n    if (data.properties[value] && typeof data.properties[value] === 'object') {\n      return message.error(`The field \"${value}\" already exists.`);\n    }\n\n    this.Model.changeNameAction({ value, prefix, name });\n  };\n\n  // 修改备注信息\n  handleChangeDesc = e => {\n    let prefix = this.getPrefix();\n    let key = [].concat(prefix, 'description');\n    let value = e.target.value;\n    this.Model.changeValueAction({ key, value });\n  };\n\n  // 修改mock 信息\n  handleChangeMock = e => {\n    let prefix = this.getPrefix();\n    let key = [].concat(prefix, `mock`);\n    let value = e ? { mock: e } : '';\n    this.Model.changeValueAction({ key, value });\n  };\n\n  // 修改数据类型\n  handleChangeType = e => {\n    let prefix = this.getPrefix();\n    let key = [].concat(prefix, 'type');\n    this.Model.changeTypeAction({ key, value: e });\n  };\n\n  // 删除节点\n  handleDeleteItem = () => {\n    const { prefix, name } = this.props;\n    let nameArray = this.getPrefix();\n    this.Model.deleteItemAction({ key: nameArray });\n    this.Model.enableRequireAction({ prefix, name, required: false });\n  };\n  /*\n  展示备注编辑弹窗\n  editorName: 弹窗名称 ['description', 'mock']\n  type: 如果当前字段是object || array showEdit 不可用\n  */\n  handleShowEdit = (editorName, type) => {\n    const { data, name, showEdit } = this.props;\n\n    showEdit(this.getPrefix(), editorName, data.properties[name][editorName], type);\n  };\n\n  // 展示高级设置弹窗\n  handleShowAdv = () => {\n    const { data, name, showAdv } = this.props;\n    showAdv(this.getPrefix(), data.properties[name]);\n  };\n\n  //  增加子节点\n  handleAddField = () => {\n    const { prefix, name } = this.props;\n    this.Model.addFieldAction({ prefix, name });\n  };\n\n  // 控制三角形按钮\n  handleClickIcon = () => {\n    let prefix = this.getPrefix();\n    // 数据存储在 properties.xxx.properties 下\n    let keyArr = [].concat(prefix, 'properties');\n    this.Model.setOpenValueAction({ key: keyArr });\n  };\n\n  // 修改是否必须\n  handleEnableRequire = e => {\n    const { prefix, name } = this.props;\n    let required = e.target.checked;\n    // this.enableRequire(this.props.prefix, this.props.name, e.target.checked);\n    this.Model.enableRequireAction({ prefix, name, required });\n  };\n\n  render() {\n    let { name, data, prefix, showEdit, showAdv, metaSchema } = this.props;\n    let value = data.properties[name];\n    let prefixArray = [].concat(prefix, name);\n\n    let prefixStr = prefix.join(JSONPATH_JOIN_CHAR);\n    let prefixArrayStr = [].concat(prefixArray, 'properties').join(JSONPATH_JOIN_CHAR);\n    let show = this.context.getOpenValue([prefixStr]);\n    let showIcon = this.context.getOpenValue([prefixArrayStr]);\n    return show ? (\n      <div>\n        <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n          <Col\n            span={this.context.isMock ? 10 : 12}\n            className=\"col-item name-item col-item-name\"\n            style={this.__tagPaddingLeftStyle}\n          >\n            <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n              <Col span={2} className=\"down-style-col\">\n                {value.type === 'object' ? (\n                  <span className=\"down-style\" onClick={this.handleClickIcon}>\n                    {showIcon ? (\n                      <Icon className=\"icon-object\" type=\"caret-down\" />\n                    ) : (\n                        <Icon className=\"icon-object\" type=\"caret-right\" />\n                      )}\n                  </span>\n                ) : null}\n              </Col>\n              <Col span={22}>\n                <FieldInput\n                  addonAfter={\n                    <Tooltip placement=\"top\" title={LocaleProvider('required')}>\n                      <Checkbox\n                        onChange={this.handleEnableRequire}\n                        checked={\n                          _.isUndefined(data.required) ? false : data.required.indexOf(name) != -1\n                        }\n                      />\n                    </Tooltip>\n                  }\n                  onChange={this.handleChangeName}\n                  value={name}\n                />\n              </Col>\n            </Row>\n          </Col>\n\n\n          <Col span={4} className=\"col-item col-item-type\">\n            <Select\n              className=\"type-select-style\"\n              onChange={this.handleChangeType}\n              value={value.customized ||value.type}\n            >\n              {/*SCHEMA_TYPE*/metaSchema.map((item, index) => {\n                return (\n                  <Option value={item} key={index}>\n                    {item}\n                  </Option>\n                );\n              })}\n            </Select>\n          </Col>\n\n\n          {this.context.isMock && (\n            <Col span={3} className=\"col-item col-item-mock\">\n              {/* <Input\n                addonAfter={\n                  <Icon type=\"edit\" onClick={() => this.handleShowEdit('mock', value.type)} />\n                }\n                placeholder={LocaleProvider('mock')}\n                value={value.mock ? value.mock.mock : ''}\n                onChange={this.handleChangeMock}\n                disabled={value.type === 'object' || value.type === 'array'}\n              /> */}\n              <MockSelect\n                schema={value}\n                showEdit={() => this.handleShowEdit('mock', value.type)}\n                onChange={this.handleChangeMock}\n              />\n            </Col>\n          )}\n\n\n          <Col span={this.context.isMock ? 4 : 5} className=\"col-item col-item-desc\">\n            <Input\n              addonAfter={<Icon type=\"edit\" onClick={() => this.handleShowEdit('description')} />}\n              placeholder={LocaleProvider('description')}\n              value={value.description}\n              onChange={this.handleChangeDesc}\n            />\n          </Col>\n\n\n          <Col span={3} className=\"col-item col-item-setting\">\n            <span className=\"adv-set\" onClick={this.handleShowAdv}>\n              <Tooltip placement=\"top\" title={LocaleProvider('adv_setting')}>\n                <Icon type=\"setting\" />\n              </Tooltip>\n            </span>\n            <span className=\"delete-item\" onClick={this.handleDeleteItem}>\n              <Icon type=\"close\" className=\"close\" />\n            </span>\n            {value.type === 'object' ? (\n              <DropPlus prefix={prefix} name={name} />\n            ) : (\n                <span onClick={this.handleAddField}>\n                  <Tooltip placement=\"top\" title={LocaleProvider('add_sibling_node')}>\n                    <Icon type=\"plus\" className=\"plus\" />\n                  </Tooltip>\n                </span>\n              )}\n          </Col>\n        </Row>\n        <div className=\"option-formStyle\">{mapping(prefixArray, value, showEdit, showAdv, metaSchema)}</div>\n      </div>\n    ) : null;\n  }\n}\n\nSchemaItem.contextTypes = {\n  getOpenValue: PropTypes.func,\n  Model: PropTypes.object,\n  isMock: PropTypes.bool\n};\n\nclass SchemaObjectComponent extends Component {\n  shouldComponentUpdate(nextProps) {\n    if (\n      _.isEqual(nextProps.data, this.props.data) &&\n      _.isEqual(nextProps.prefix, this.props.prefix) &&\n      _.isEqual(nextProps.open, this.props.open)\n    ) {\n      return false;\n    }\n    return true;\n  }\n\n  render() {\n    const { data, prefix, showEdit, showAdv, metaSchema } = this.props;\n    return (\n      <div className=\"object-style\">\n        {Object.keys(data.properties).map((name, index) => (\n          <SchemaItem\n            key={index}\n            data={this.props.data}\n            name={name}\n            prefix={prefix}\n            showEdit={showEdit}\n            showAdv={showAdv}\n            metaSchema={metaSchema}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nconst SchemaObject = connect(state => ({\n  open: state.schema.open\n}))(SchemaObjectComponent);\n\nconst DropPlus = (props, context) => {\n  const { prefix, name, add } = props;\n  const Model = context.Model.schema;\n  const menu = (\n    <Menu>\n      <Menu.Item>\n        <span onClick={() => Model.addFieldAction({ prefix, name })}>\n          {LocaleProvider('sibling_node')}\n        </span>\n      </Menu.Item>\n      <Menu.Item>\n        <span\n          onClick={() => {\n            Model.setOpenValueAction({ key: [].concat(prefix, name, 'properties'), value: true });\n            Model.addChildFieldAction({ key: [].concat(prefix, name, 'properties') });\n          }}\n        >\n          {LocaleProvider('child_node')}\n        </span>\n      </Menu.Item>\n    </Menu>\n  );\n\n  return (\n    <Tooltip placement=\"top\" title={LocaleProvider('add_node')}>\n      <Dropdown overlay={menu}>\n        <Icon type=\"plus\" className=\"plus\" />\n      </Dropdown>\n    </Tooltip>\n  );\n};\n\nDropPlus.contextTypes = {\n  Model: PropTypes.object\n};\n\nconst SchemaJson = props => {\n  const item = mapping([], props.data, props.showEdit, props.showAdv, props.metaSchema);\n  return <div className=\"schema-content\">{item}</div>;\n};\n\n\nexport default SchemaJson;\n"]},"metadata":{},"sourceType":"module"}