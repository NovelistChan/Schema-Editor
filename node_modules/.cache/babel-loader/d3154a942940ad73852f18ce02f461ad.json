{"ast":null,"code":"var _jsxFileName = \"/Users/novelistchan/Documents/sddm-component/json-schema-editor/src/components/editor/App.js\";\nimport React from 'react';\nimport { Input, Row, Tooltip, Col, Form, Select, Checkbox, Button, Icon, Modal, message, Tabs, AutoComplete } from 'antd';\nimport './index.css';\nimport AceEditor from './components/AceEditor/AceEditor.js';\nimport _ from 'underscore';\nimport { connect } from 'react-redux';\nimport SchemaJson from './components/SchemaComponents/SchemaJson.js';\nimport PropTypes from 'prop-types';\nimport { SCHEMA_TYPE, debounce } from './utils.js';\nimport handleSchema from './schema';\nimport CustomItem from './components/SchemaComponents/SchemaOther.js';\nimport LocalProvider from './components/LocalProvider/index.js';\nimport MockSelect from './components/MockSelect/index.js';\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst TextArea = Input.TextArea;\nconst TabPane = Tabs.TabPane;\n\nconst GenerateSchema = require('generate-schema/src/schemas/json.js');\n\nconst utils = require('./utils');\n\nclass jsonSchema extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = () => {\n      if (this.importJsonType !== 'schema') {\n        if (!this.jsonData) {\n          return message.error('json 数据格式有误');\n        }\n\n        let jsonData = GenerateSchema(this.jsonData);\n        this.Model.changeEditorSchemaAction({\n          value: jsonData\n        });\n      } else {\n        if (!this.jsonSchemaData) {\n          return message.error('json 数据格式有误');\n        }\n\n        this.Model.changeEditorSchemaAction({\n          value: this.jsonSchemaData\n        });\n      }\n\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        visible: false\n      });\n    };\n\n    this.alterMsg = () => {// return message.error(LocalProvider('valid_json'));\n    };\n\n    this.handleParams = e => {\n      if (!e.text) return; // 将数据map 到store中\n\n      if (e.format !== true) {\n        return this.alterMsg();\n      }\n\n      handleSchema(e.jsonData);\n      this.Model.changeEditorSchemaAction({\n        value: e.jsonData\n      });\n    };\n\n    this.changeType = (key, value) => {\n      this.Model.changeTypeAction({\n        key: [key],\n        value\n      });\n    };\n\n    this.handleImportJson = e => {\n      if (!e.text || e.format !== true) {\n        return this.jsonData = null;\n      }\n\n      this.jsonData = e.jsonData;\n    };\n\n    this.handleImportJsonSchema = e => {\n      if (!e.text || e.format !== true) {\n        return this.jsonSchemaData = null;\n      }\n\n      this.jsonSchemaData = e.jsonData;\n    };\n\n    this.addChildField = key => {\n      this.Model.addChildFieldAction({\n        key: [key]\n      });\n      this.setState({\n        show: true\n      });\n    };\n\n    this.clickIcon = () => {\n      this.setState({\n        show: !this.state.show\n      });\n    };\n\n    this.changeValue = (key, value) => {\n      if (key[0] === 'mock') {\n        value = value ? {\n          mock: value\n        } : '';\n      }\n\n      this.Model.changeValueAction({\n        key,\n        value\n      });\n    };\n\n    this.handleEditOk = name => {\n      this.setState({\n        editVisible: false\n      });\n      let value = this.state[name];\n\n      if (name === 'mock') {\n        value = value ? {\n          mock: value\n        } : '';\n      }\n\n      this.Model.changeValueAction({\n        key: this.state.descriptionKey,\n        value\n      });\n    };\n\n    this.handleEditCancel = () => {\n      this.setState({\n        editVisible: false\n      });\n    };\n\n    this.showEdit = (prefix, name, value, type) => {\n      if (type === 'object' || type === 'array') {\n        return;\n      }\n\n      let descriptionKey = [].concat(prefix, name);\n      value = name === 'mock' ? value ? value.mock : '' : value;\n      this.setState({\n        editVisible: true,\n        [name]: value,\n        descriptionKey,\n        editorModalName: name\n      });\n    };\n\n    this.changeDesc = (e, name) => {\n      this.setState({\n        [name]: e\n      });\n    };\n\n    this.handleAdvOk = () => {\n      if (this.state.itemKey.length === 0) {\n        this.Model.changeEditorSchemaAction({\n          value: this.state.curItemCustomValue\n        });\n      } else {\n        this.Model.changeValueAction({\n          key: this.state.itemKey,\n          value: this.state.curItemCustomValue\n        });\n      }\n\n      this.setState({\n        advVisible: false\n      });\n    };\n\n    this.handleAdvCancel = () => {\n      this.setState({\n        advVisible: false\n      });\n    };\n\n    this.showAdv = (key, value) => {\n      this.setState({\n        advVisible: true,\n        itemKey: key,\n        curItemCustomValue: value // 当前节点的数据信息\n\n      });\n    };\n\n    this.changeCustomValue = newValue => {\n      this.setState({\n        curItemCustomValue: newValue\n      });\n    };\n\n    this.changeCheckBox = e => {\n      this.setState({\n        checked: e\n      });\n      this.Model.requireAllAction({\n        required: e,\n        value: this.props.schema\n      });\n    };\n\n    this.alterMsg = debounce(this.alterMsg, 2000);\n    this.state = {\n      visible: false,\n      show: true,\n      editVisible: false,\n      description: '',\n      descriptionKey: null,\n      advVisible: false,\n      itemKey: [],\n      curItemCustomValue: null,\n      checked: false,\n      editorModalName: '',\n      // 弹窗名称desctiption | mock\n      mock: ''\n    };\n    this.Model = this.props.Model.schema;\n    this.jsonSchemaData = null;\n    this.jsonData = null;\n  } // json 导入弹窗\n\n\n  componentWillReceiveProps(nextProps) {\n    if (typeof this.props.onChange === 'function' && this.props.schema !== nextProps.schema) {\n      let oldData = JSON.stringify(this.props.schema || '');\n      let newData = JSON.stringify(nextProps.schema || '');\n      if (oldData !== newData) return this.props.onChange(newData);\n    }\n\n    if (this.props.data && this.props.data !== nextProps.data) {\n      this.Model.changeEditorSchemaAction({\n        value: JSON.parse(nextProps.data)\n      });\n    }\n  }\n\n  componentWillMount() {\n    let data = this.props.data;\n\n    if (!data) {\n      data = \"{\\n        \\\"type\\\": \\\"object\\\",\\n        \\\"title\\\": \\\"empty object\\\",\\n        \\\"properties\\\":{}\\n      }\";\n    }\n\n    this.Model.changeEditorSchemaAction({\n      value: JSON.parse(data)\n    });\n  }\n\n  getChildContext() {\n    return {\n      getOpenValue: keys => {\n        return utils.getData(this.props.open, keys);\n      },\n      changeCustomValue: this.changeCustomValue,\n      Model: this.props.Model,\n      isMock: this.props.isMock\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          visible = _this$state.visible,\n          editVisible = _this$state.editVisible,\n          description = _this$state.description,\n          advVisible = _this$state.advVisible,\n          type = _this$state.type,\n          checked = _this$state.checked,\n          editorModalName = _this$state.editorModalName;\n    const _this$props = this.props,\n          schema = _this$props.schema,\n          customButton = _this$props.customButton;\n    let disabled = this.props.schema.type === 'object' || this.props.schema.type === 'array' ? false : true;\n    const importButton = React.createElement(Button, {\n      className: \"import-json-button\",\n      type: \"primary\",\n      onClick: this.showModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276\n      },\n      __self: this\n    }, LocalProvider('import_json'));\n    return React.createElement(\"div\", {\n      className: \"json-schema-react-editor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, importButton, React.createElement(Modal, {\n      maskClosable: false,\n      visible: visible,\n      title: LocalProvider('import_json'),\n      onOk: this.handleOk,\n      onCancel: this.handleCancel,\n      className: \"json-schema-react-editor-import-modal\",\n      okText: 'ok',\n      cancelText: LocalProvider('cancel'),\n      footer: [React.createElement(Button, {\n        key: \"back\",\n        onClick: this.handleCancel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, LocalProvider('cancel')), React.createElement(Button, {\n        key: \"submit\",\n        type: \"primary\",\n        onClick: this.handleOk,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, LocalProvider('ok'))],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, React.createElement(Tabs, {\n      defaultActiveKey: \"json\",\n      onChange: key => {\n        this.importJsonType = key;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(TabPane, {\n      tab: \"JSON\",\n      key: \"json\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(AceEditor, {\n      data: \"\",\n      mode: \"json\",\n      onChange: this.handleImportJson,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    })), React.createElement(TabPane, {\n      tab: \"JSON-SCHEMA\",\n      key: \"schema\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311\n      },\n      __self: this\n    }, React.createElement(AceEditor, {\n      data: \"\",\n      mode: \"json\",\n      onChange: this.handleImportJsonSchema,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312\n      },\n      __self: this\n    })))), React.createElement(Modal, {\n      title: React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, LocalProvider(editorModalName), \"\\xA0\", editorModalName === 'mock' && React.createElement(Tooltip, {\n        title: LocalProvider('mockLink'),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: \"https://yapi.ymfe.org/documents/mock.html#\\u65B9\\u5F0F2.-json-schema\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 324\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"question-circle-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329\n        },\n        __self: this\n      })))),\n      maskClosable: false,\n      visible: editVisible,\n      onOk: () => this.handleEditOk(editorModalName),\n      onCancel: this.handleEditCancel,\n      okText: LocalProvider('ok'),\n      cancelText: LocalProvider('cancel'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(TextArea, {\n      value: this.state[editorModalName],\n      placeholder: LocalProvider(editorModalName),\n      onChange: e => this.changeDesc(e.target.value, editorModalName),\n      autosize: {\n        minRows: 6,\n        maxRows: 10\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    })), advVisible && React.createElement(Modal, {\n      title: LocalProvider('adv_setting'),\n      maskClosable: false,\n      visible: advVisible,\n      onOk: this.handleAdvOk,\n      onCancel: this.handleAdvCancel,\n      okText: LocalProvider('ok'),\n      width: 780,\n      cancelText: LocalProvider('cancel'),\n      className: \"json-schema-react-editor-adv-modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, React.createElement(CustomItem, {\n      advancedTemplate: this.props.advancedTemplate,\n      data: JSON.stringify(this.state.curItemCustomValue, null, 2),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362\n      },\n      __self: this\n    })), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366\n      },\n      __self: this\n    }, this.props.showEditor && React.createElement(Col, {\n      span: 8,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(AceEditor, {\n      className: \"pretty-editor\",\n      mode: \"json\",\n      data: JSON.stringify(schema, null, 2),\n      onChange: this.handleParams,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    })), React.createElement(Col, {\n      span: this.props.showEditor ? 16 : 24,\n      className: \"wrapper object-style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      align: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: this.props.isMock ? 10 : 12,\n      className: \"col-item name-item col-item-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379\n      },\n      __self: this\n    }, React.createElement(Row, {\n      type: \"flex\",\n      justify: \"space-around\",\n      align: \"middle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380\n      },\n      __self: this\n    }, React.createElement(Col, {\n      span: 2,\n      className: \"down-style-col\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381\n      },\n      __self: this\n    }, schema.type === 'object' ? React.createElement(\"span\", {\n      className: \"down-style\",\n      onClick: this.clickIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }, this.state.show ? React.createElement(Icon, {\n      className: \"icon-object\",\n      type: \"caret-down\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385\n      },\n      __self: this\n    }) : React.createElement(Icon, {\n      className: \"icon-object\",\n      type: \"caret-right\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387\n      },\n      __self: this\n    })) : null), React.createElement(Col, {\n      span: 22,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392\n      },\n      __self: this\n    }, React.createElement(Input, {\n      addonAfter: React.createElement(Tooltip, {\n        placement: \"top\",\n        title: 'checked_all',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        checked: checked,\n        disabled: disabled,\n        onChange: e => this.changeCheckBox(e.target.checked),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      })),\n      disabled: true,\n      value: \"root\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393\n      },\n      __self: this\n    })))), React.createElement(Col, {\n      span: 4,\n      className: \"col-item col-item-type\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409\n      },\n      __self: this\n    }, React.createElement(Select, {\n      className: \"type-select-style\",\n      onChange: e => this.changeType(\"type\", e),\n      value: schema.customized || schema.type || 'object',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410\n      },\n      __self: this\n    },\n    /*SCHEMA_TYPE*/\n    this.props.metaSchema.map((item, index) => {\n      return React.createElement(Option, {\n        value: item,\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, item);\n    }))), this.props.isMock && React.createElement(Col, {\n      span: 3,\n      className: \"col-item col-item-mock\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425\n      },\n      __self: this\n    }, React.createElement(MockSelect, {\n      schema: schema,\n      showEdit: () => this.showEdit([], 'mock', schema.mock, schema.type),\n      onChange: value => this.changeValue(['mock'], value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426\n      },\n      __self: this\n    })), React.createElement(Col, {\n      span: this.props.isMock ? 4 : 5,\n      className: \"col-item col-item-desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433\n      },\n      __self: this\n    }, React.createElement(Input, {\n      addonAfter: React.createElement(Icon, {\n        type: \"edit\",\n        onClick: () => this.showEdit([], 'description', this.props.schema.description),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }),\n      placeholder: 'description',\n      value: schema.description,\n      onChange: e => this.changeValue(['description'], e.target.value),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434\n      },\n      __self: this\n    })), React.createElement(Col, {\n      span: 3,\n      className: \"col-item col-item-setting\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"adv-set\",\n      onClick: () => this.showAdv([], this.props.schema),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      placement: \"top\",\n      title: LocalProvider('adv_setting'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"setting\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451\n      },\n      __self: this\n    }))), schema.type === 'object' ? React.createElement(\"span\", {\n      onClick: () => this.addChildField('properties'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 455\n      },\n      __self: this\n    }, React.createElement(Tooltip, {\n      placement: \"top\",\n      title: LocalProvider('add_child_node'),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 456\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      className: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457\n      },\n      __self: this\n    }))) : null)), this.state.show && React.createElement(SchemaJson, {\n      data: this.props.schema,\n      showEdit: this.showEdit,\n      showAdv: this.showAdv,\n      metaSchema: this.props.metaSchema,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464\n      },\n      __self: this\n    }))));\n  }\n\n}\n\njsonSchema.childContextTypes = {\n  getOpenValue: PropTypes.func,\n  changeCustomValue: PropTypes.func,\n  Model: PropTypes.object,\n  isMock: PropTypes.bool\n};\njsonSchema.propTypes = {\n  data: PropTypes.string,\n  onChange: PropTypes.func,\n  showEditor: PropTypes.bool,\n  metaSchema: PropTypes.array,\n  isMock: PropTypes.bool,\n  Model: PropTypes.object\n};\nexport default connect(state => ({\n  schema: state.schema.data,\n  open: state.schema.open\n}))(jsonSchema);","map":{"version":3,"sources":["/Users/novelistchan/Documents/sddm-component/json-schema-editor/src/components/editor/App.js"],"names":["React","Input","Row","Tooltip","Col","Form","Select","Checkbox","Button","Icon","Modal","message","Tabs","AutoComplete","AceEditor","_","connect","SchemaJson","PropTypes","SCHEMA_TYPE","debounce","handleSchema","CustomItem","LocalProvider","MockSelect","FormItem","Item","Option","TextArea","TabPane","GenerateSchema","require","utils","jsonSchema","Component","constructor","props","showModal","setState","visible","handleOk","importJsonType","jsonData","error","Model","changeEditorSchemaAction","value","jsonSchemaData","handleCancel","alterMsg","handleParams","e","text","format","changeType","key","changeTypeAction","handleImportJson","handleImportJsonSchema","addChildField","addChildFieldAction","show","clickIcon","state","changeValue","mock","changeValueAction","handleEditOk","name","editVisible","descriptionKey","handleEditCancel","showEdit","prefix","type","concat","editorModalName","changeDesc","handleAdvOk","itemKey","length","curItemCustomValue","advVisible","handleAdvCancel","showAdv","changeCustomValue","newValue","changeCheckBox","checked","requireAllAction","required","schema","description","componentWillReceiveProps","nextProps","onChange","oldData","JSON","stringify","newData","data","parse","componentWillMount","getChildContext","getOpenValue","keys","getData","open","isMock","render","customButton","disabled","importButton","target","minRows","maxRows","advancedTemplate","showEditor","customized","metaSchema","map","item","index","childContextTypes","func","object","bool","propTypes","string","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n  Input,\n  Row,\n  Tooltip,\n  Col,\n  Form,\n  Select,\n  Checkbox,\n  Button,\n  Icon,\n  Modal,\n  message,\n  Tabs,\n  AutoComplete\n} from 'antd';\n\nimport './index.css';\nimport AceEditor from './components/AceEditor/AceEditor.js';\nimport _ from 'underscore';\nimport { connect } from 'react-redux';\nimport SchemaJson from './components/SchemaComponents/SchemaJson.js';\nimport PropTypes from 'prop-types';\nimport { SCHEMA_TYPE, debounce } from './utils.js';\nimport handleSchema from './schema';\nimport CustomItem from './components/SchemaComponents/SchemaOther.js';\nimport LocalProvider from './components/LocalProvider/index.js';\nimport MockSelect from './components/MockSelect/index.js';\n\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst { TextArea } = Input;\nconst TabPane = Tabs.TabPane;\nconst GenerateSchema = require('generate-schema/src/schemas/json.js');\nconst utils = require('./utils');\n\nclass jsonSchema extends React.Component {\n  constructor(props) {\n    super(props);\n    this.alterMsg = debounce(this.alterMsg, 2000);\n    this.state = {\n      visible: false,\n      show: true,\n      editVisible: false,\n      description: '',\n      descriptionKey: null,\n      advVisible: false,\n      itemKey: [],\n      curItemCustomValue: null,\n      checked: false,\n      editorModalName: '', // 弹窗名称desctiption | mock\n      mock: ''\n    };\n    this.Model = this.props.Model.schema;\n    this.jsonSchemaData = null;\n    this.jsonData = null;\n  }\n\n  // json 导入弹窗\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n  handleOk = () => {\n    if (this.importJsonType !== 'schema') {\n      if (!this.jsonData) {\n        return message.error('json 数据格式有误');\n      }\n\n      let jsonData = GenerateSchema(this.jsonData);\n      this.Model.changeEditorSchemaAction({ value: jsonData });\n    } else {\n      if (!this.jsonSchemaData) {\n        return message.error('json 数据格式有误');\n      }\n      this.Model.changeEditorSchemaAction({ value: this.jsonSchemaData });\n    }\n    this.setState({ visible: false });\n  };\n\n  handleCancel = () => {\n    this.setState({ visible: false });\n  };\n\n  componentWillReceiveProps(nextProps) {\n    if (typeof this.props.onChange === 'function' && this.props.schema !== nextProps.schema) {\n      let oldData = JSON.stringify(this.props.schema || '');\n      let newData = JSON.stringify(nextProps.schema || '');\n      if (oldData !== newData) return this.props.onChange(newData);\n    }\n    if (this.props.data && this.props.data !== nextProps.data) {\n      this.Model.changeEditorSchemaAction({ value: JSON.parse(nextProps.data) });\n    }\n  }\n\n  componentWillMount() {\n    let data = this.props.data;\n    if (!data) {\n      data = `{\n        \"type\": \"object\",\n        \"title\": \"empty object\",\n        \"properties\":{}\n      }`;\n    }\n    this.Model.changeEditorSchemaAction({ value: JSON.parse(data) });\n  }\n\n  getChildContext() {\n    return {\n      getOpenValue: keys => {\n        return utils.getData(this.props.open, keys);\n      },\n      changeCustomValue: this.changeCustomValue,\n      Model: this.props.Model,\n      isMock: this.props.isMock\n    };\n  }\n\n  alterMsg = () => {\n    // return message.error(LocalProvider('valid_json'));\n  };\n\n  // AceEditor 中的数据\n  handleParams = e => {\n    if (!e.text) return;\n    // 将数据map 到store中\n    if (e.format !== true) {\n      return this.alterMsg();\n    }\n    handleSchema(e.jsonData);\n    this.Model.changeEditorSchemaAction({\n      value: e.jsonData\n    });\n  };\n\n  // 修改数据类型\n  changeType = (key, value) => {\n    this.Model.changeTypeAction({ key: [key], value });\n  };\n\n  handleImportJson = e => {\n    if (!e.text || e.format !== true) {\n      return (this.jsonData = null);\n    }\n    this.jsonData = e.jsonData;\n  };\n\n  handleImportJsonSchema = e => {\n    if (!e.text || e.format !== true) {\n      return (this.jsonSchemaData = null);\n    }\n    this.jsonSchemaData = e.jsonData;\n  };\n  // 增加子节点\n  addChildField = key => {\n    this.Model.addChildFieldAction({ key: [key] });\n    this.setState({ show: true });\n  };\n\n  clickIcon = () => {\n    this.setState({ show: !this.state.show });\n  };\n\n  // 修改备注信息\n  changeValue = (key, value) => {\n    if (key[0] === 'mock') {\n      value = value ? { mock: value } : '';\n    }\n    this.Model.changeValueAction({ key, value });\n  };\n\n  // 备注/mock弹窗 点击ok 时\n  handleEditOk = name => {\n    this.setState({\n      editVisible: false\n    });\n    let value = this.state[name];\n    if (name === 'mock') {\n      value = value ? { mock: value } : '';\n    }\n    this.Model.changeValueAction({ key: this.state.descriptionKey, value });\n  };\n\n  handleEditCancel = () => {\n    this.setState({\n      editVisible: false\n    });\n  };\n  /*\n    展示弹窗modal\n    prefix: 节点前缀信息\n    name: 弹窗的名称 ['description', 'mock']\n    value: 输入值\n    type: 如果当前字段是object || array showEdit 不可用\n  */\n  showEdit = (prefix, name, value, type) => {\n    if (type === 'object' || type === 'array') {\n      return;\n    }\n    let descriptionKey = [].concat(prefix, name);\n\n    value = name === 'mock' ? (value ? value.mock : '') : value;\n    this.setState({\n      editVisible: true,\n      [name]: value,\n      descriptionKey,\n      editorModalName: name\n    });\n  };\n\n  // 修改备注/mock参数信息\n  changeDesc = (e, name) => {\n    this.setState({\n      [name]: e\n    });\n  };\n\n  // 高级设置\n  handleAdvOk = () => {\n    if (this.state.itemKey.length === 0) {\n      this.Model.changeEditorSchemaAction({\n        value: this.state.curItemCustomValue\n      });\n    } else {\n      this.Model.changeValueAction({\n        key: this.state.itemKey,\n        value: this.state.curItemCustomValue\n      });\n    }\n    this.setState({\n      advVisible: false\n    });\n  };\n  handleAdvCancel = () => {\n    this.setState({\n      advVisible: false\n    });\n  };\n  showAdv = (key, value) => {\n    this.setState({\n      advVisible: true,\n      itemKey: key,\n      curItemCustomValue: value // 当前节点的数据信息\n    });\n  };\n\n  //  修改弹窗中的json-schema 值\n  changeCustomValue = newValue => {\n    this.setState({\n      curItemCustomValue: newValue\n    });\n  };\n\n  changeCheckBox = e => {\n    this.setState({ checked: e });\n    this.Model.requireAllAction({ required: e, value: this.props.schema });\n  };\n\n  render() {\n    const {\n      visible,\n      editVisible,\n      description,\n      advVisible,\n      type,\n      checked,\n      editorModalName\n    } = this.state;\n    const { schema, customButton } = this.props;\n\n    let disabled =\n      this.props.schema.type === 'object' || this.props.schema.type === 'array' ? false : true;\n\n    const importButton = (\n      <Button className=\"import-json-button\" type=\"primary\" onClick={this.showModal}>\n        {LocalProvider('import_json')}\n      </Button>\n    )\n\n    return (\n      <div className=\"json-schema-react-editor\">\n        {importButton}\n        <Modal\n          maskClosable={false}\n          visible={visible}\n          title={LocalProvider('import_json')}\n          onOk={this.handleOk}\n          onCancel={this.handleCancel}\n          className=\"json-schema-react-editor-import-modal\"\n          okText={'ok'}\n          cancelText={LocalProvider('cancel')}\n          footer={[\n            <Button key=\"back\" onClick={this.handleCancel}>\n              {LocalProvider('cancel')}\n            </Button>,\n            <Button key=\"submit\" type=\"primary\" onClick={this.handleOk}>\n              {LocalProvider('ok')}\n            </Button>\n          ]}\n        >\n          <Tabs\n            defaultActiveKey=\"json\"\n            onChange={key => {\n              this.importJsonType = key;\n            }}\n          >\n            <TabPane tab=\"JSON\" key=\"json\">\n              <AceEditor data=\"\" mode=\"json\" onChange={this.handleImportJson} />\n            </TabPane>\n            <TabPane tab=\"JSON-SCHEMA\" key=\"schema\">\n              <AceEditor data=\"\" mode=\"json\" onChange={this.handleImportJsonSchema} />\n            </TabPane>\n          </Tabs>\n        </Modal>\n\n        <Modal\n          title={\n            <div>\n              {LocalProvider(editorModalName)}\n              &nbsp;\n              {editorModalName === 'mock' && (\n                <Tooltip title={LocalProvider('mockLink')}>\n                  <a\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                    href=\"https://yapi.ymfe.org/documents/mock.html#方式2.-json-schema\"\n                  >\n                    <Icon type=\"question-circle-o\" />\n                  </a>\n                </Tooltip>\n              )}\n            </div>\n          }\n          maskClosable={false}\n          visible={editVisible}\n          onOk={() => this.handleEditOk(editorModalName)}\n          onCancel={this.handleEditCancel}\n          okText={LocalProvider('ok')}\n          cancelText={LocalProvider('cancel')}\n        >\n          <TextArea\n            value={this.state[editorModalName]}\n            placeholder={LocalProvider(editorModalName)}\n            onChange={e => this.changeDesc(e.target.value, editorModalName)}\n            autosize={{ minRows: 6, maxRows: 10 }}\n          />\n        </Modal>\n\n        {advVisible && (\n          <Modal\n            title={LocalProvider('adv_setting')}\n            maskClosable={false}\n            visible={advVisible}\n            onOk={this.handleAdvOk}\n            onCancel={this.handleAdvCancel}\n            okText={LocalProvider('ok')}\n            width={780}\n            cancelText={LocalProvider('cancel')}\n            className=\"json-schema-react-editor-adv-modal\"\n          >\n            <CustomItem advancedTemplate={this.props.advancedTemplate} data={JSON.stringify(this.state.curItemCustomValue, null, 2)} />\n          </Modal>\n        )}\n\n        <Row>\n          {this.props.showEditor && (\n            <Col span={8}>\n              <AceEditor\n                className=\"pretty-editor\"\n                mode=\"json\"\n                data={JSON.stringify(schema, null, 2)}\n                onChange={this.handleParams}\n              />\n            </Col>\n          )}\n          <Col span={this.props.showEditor ? 16 : 24} className=\"wrapper object-style\">\n            <Row type=\"flex\" align=\"middle\">\n              <Col span={this.props.isMock ? 10 : 12} className=\"col-item name-item col-item-name\">\n                <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n                  <Col span={2} className=\"down-style-col\">\n                    {schema.type === 'object' ? (\n                      <span className=\"down-style\" onClick={this.clickIcon}>\n                        {this.state.show ? (\n                          <Icon className=\"icon-object\" type=\"caret-down\" />\n                        ) : (\n                            <Icon className=\"icon-object\" type=\"caret-right\" />\n                          )}\n                      </span>\n                    ) : null}\n                  </Col>\n                  <Col span={22}>\n                    <Input\n                      addonAfter={\n                        <Tooltip placement=\"top\" title={'checked_all'}>\n                          <Checkbox\n                            checked={checked}\n                            disabled={disabled}\n                            onChange={e => this.changeCheckBox(e.target.checked)}\n                          />\n                        </Tooltip>\n                      }\n                      disabled\n                      value=\"root\"\n                    />\n                  </Col>\n                </Row>\n              </Col>\n              <Col span={4} className=\"col-item col-item-type\">\n                <Select\n                  className=\"type-select-style\"\n                  onChange={e => this.changeType(`type`, e)}\n                  value={schema.customized || schema.type || 'object'}\n                >\n                  {/*SCHEMA_TYPE*/this.props.metaSchema.map((item, index) => {\n                    return (\n                      <Option value={item} key={index}>\n                        {item}\n                      </Option>\n                    );\n                  })}\n                </Select>\n              </Col>\n              {this.props.isMock && (\n                <Col span={3} className=\"col-item col-item-mock\">\n                  <MockSelect\n                    schema={schema}\n                    showEdit={() => this.showEdit([], 'mock', schema.mock, schema.type)}\n                    onChange={value => this.changeValue(['mock'], value)}\n                  />\n                </Col>\n              )}\n              <Col span={this.props.isMock ? 4 : 5} className=\"col-item col-item-desc\">\n                <Input\n                  addonAfter={\n                    <Icon\n                      type=\"edit\"\n                      onClick={() =>\n                        this.showEdit([], 'description', this.props.schema.description)\n                      }\n                    />\n                  }\n                  placeholder={'description'}\n                  value={schema.description}\n                  onChange={e => this.changeValue(['description'], e.target.value)}\n                />\n              </Col>\n              <Col span={3} className=\"col-item col-item-setting\">\n                <span className=\"adv-set\" onClick={() => this.showAdv([], this.props.schema)}>\n                  <Tooltip placement=\"top\" title={LocalProvider('adv_setting')}>\n                    <Icon type=\"setting\" />\n                  </Tooltip>\n                </span>\n                {schema.type === 'object' ? (\n                  <span onClick={() => this.addChildField('properties')}>\n                    <Tooltip placement=\"top\" title={LocalProvider('add_child_node')}>\n                      <Icon type=\"plus\" className=\"plus\" />\n                    </Tooltip>\n                  </span>\n                ) : null}\n              </Col>\n            </Row>\n            {this.state.show && (\n              <SchemaJson\n                data={this.props.schema}\n                showEdit={this.showEdit}\n                showAdv={this.showAdv}\n                metaSchema={this.props.metaSchema}\n              />\n            )}\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\njsonSchema.childContextTypes = {\n  getOpenValue: PropTypes.func,\n  changeCustomValue: PropTypes.func,\n  Model: PropTypes.object,\n  isMock: PropTypes.bool\n};\n\njsonSchema.propTypes = {\n  data: PropTypes.string,\n  onChange: PropTypes.func,\n  showEditor: PropTypes.bool,\n  metaSchema: PropTypes.array,\n  isMock: PropTypes.bool,\n  Model: PropTypes.object\n};\n\nexport default connect(state => ({\n  schema: state.schema.data,\n  open: state.schema.open\n}))(jsonSchema);\n"]},"metadata":{},"sourceType":"module"}