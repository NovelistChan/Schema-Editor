{"ast":null,"code":"var _jsxFileName = \"/Users/novelistchan/Documents/sddm-component/json-schema-editor/src/components/editor/components/AceEditor/AceEditor.js\";\nimport React from 'react';\nimport mockEditor from './mockEditor';\nimport PropTypes from 'prop-types';\nimport _ from 'underscore';\nimport './AceEditor.css';\nconst ModeMap = {\n  javascript: 'ace/mode/javascript',\n  json: 'ace/mode/json',\n  text: 'ace/mode/text',\n  xml: 'ace/mode/xml',\n  html: 'ace/mode/html'\n};\n\nfunction isNotMatch(a, b) {\n  try {\n    a = JSON.parse(a);\n    b = JSON.parse(b);\n    return !_.isEqual(a, b);\n  } catch (e) {\n    return true;\n  }\n}\n\nfunction getMode(mode) {\n  return ModeMap[mode] || ModeMap.text;\n}\n\nclass AceEditor extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.editor = mockEditor({\n      container: this.editorElement,\n      data: this.props.data,\n      onChange: this.props.onChange,\n      readOnly: this.props.readOnly,\n      fullScreen: this.props.fullScreen\n    });\n    let mode = this.props.mode || 'javascript';\n    this.editor.editor.getSession().setMode(getMode(mode));\n\n    if (typeof this.props.callback === 'function') {\n      this.props.callback(this.editor.editor);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.editor) return;\n\n    if (isNotMatch(nextProps.data, this.props.data) && isNotMatch(this.editor.getValue(), nextProps.data)) {\n      this.editor.setValue(nextProps.data);\n      let mode = nextProps.mode || 'javascript';\n      this.editor.editor.getSession().setMode(getMode(mode));\n      this.editor.editor.clearSelection();\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: this.props.className,\n      style: this.props.className ? undefined : this.props.style || {\n        width: '100%',\n        height: '200px'\n      },\n      ref: editor => {\n        this.editorElement = editor;\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }\n\n}\n\nAceEditor.propTypes = {\n  data: PropTypes.string,\n  onChange: PropTypes.func,\n  className: PropTypes.string,\n  mode: PropTypes.string,\n  //enum[json, text, javascript], default is javascript\n  readOnly: PropTypes.bool,\n  callback: PropTypes.func,\n  style: PropTypes.object,\n  fullScreen: PropTypes.bool,\n  insertCode: PropTypes.func\n};\nexport default AceEditor;","map":{"version":3,"sources":["/Users/novelistchan/Documents/sddm-component/json-schema-editor/src/components/editor/components/AceEditor/AceEditor.js"],"names":["React","mockEditor","PropTypes","_","ModeMap","javascript","json","text","xml","html","isNotMatch","a","b","JSON","parse","isEqual","e","getMode","mode","AceEditor","PureComponent","constructor","props","componentDidMount","editor","container","editorElement","data","onChange","readOnly","fullScreen","getSession","setMode","callback","componentWillReceiveProps","nextProps","getValue","setValue","clearSelection","render","className","undefined","style","width","height","propTypes","string","func","bool","object","insertCode"],"mappings":"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","sourcesContent":["import React from 'react';\nimport mockEditor from './mockEditor';\nimport PropTypes from 'prop-types';\nimport _ from 'underscore';\nimport './AceEditor.css'\n\nconst ModeMap = {\n  javascript: 'ace/mode/javascript',\n  json: 'ace/mode/json',\n  text: 'ace/mode/text',\n  xml: 'ace/mode/xml',\n  html: 'ace/mode/html'\n};\n\nfunction isNotMatch(a, b) {\n  try {\n    a = JSON.parse(a);\n    b = JSON.parse(b);\n    return !_.isEqual(a, b);\n  } catch (e) {\n    return true;\n  }\n}\n\nfunction getMode(mode) {\n  return ModeMap[mode] || ModeMap.text;\n}\n\nclass AceEditor extends React.PureComponent {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidMount() {\n    this.editor = mockEditor({\n      container: this.editorElement,\n      data: this.props.data,\n      onChange: this.props.onChange,\n      readOnly: this.props.readOnly,\n      fullScreen: this.props.fullScreen\n    });\n\n    let mode = this.props.mode || 'javascript';\n    this.editor.editor.getSession().setMode(getMode(mode));\n    if (typeof this.props.callback === 'function') {\n      this.props.callback(this.editor.editor);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (!this.editor) return;\n\n    if (\n      isNotMatch(nextProps.data, this.props.data) &&\n      isNotMatch(this.editor.getValue(), nextProps.data)\n    ) {\n      this.editor.setValue(nextProps.data);\n\n      let mode = nextProps.mode || 'javascript';\n      this.editor.editor.getSession().setMode(getMode(mode));\n      this.editor.editor.clearSelection();\n    }\n  }\n\n  render() {\n    return (\n      <div\n        className={this.props.className}\n        style={\n          this.props.className ? undefined : this.props.style || { width: '100%', height: '200px' }\n        }\n        ref={editor => {\n          this.editorElement = editor;\n        }}\n      />\n    );\n  }\n}\n\nAceEditor.propTypes = {\n  data: PropTypes.string,\n  onChange: PropTypes.func,\n  className: PropTypes.string,\n  mode: PropTypes.string, //enum[json, text, javascript], default is javascript\n  readOnly: PropTypes.bool,\n  callback: PropTypes.func,\n  style: PropTypes.object,\n  fullScreen: PropTypes.bool,\n  insertCode: PropTypes.func\n};\n\nexport default AceEditor;\n"]},"metadata":{},"sourceType":"module"}