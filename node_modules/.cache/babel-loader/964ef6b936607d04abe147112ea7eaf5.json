{"ast":null,"code":"var _jsxFileName = \"/Users/novelistchan/Documents/sddm-component/json-schema-editor/src/components/editor/components/SchemaComponents/FieldInput.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Input } from 'antd';\nexport default class FieldInput extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = e => {\n      let value = e.target.value;\n      this.setState({\n        value\n      });\n    };\n\n    this.onKeyup = e => {\n      if (e.keyCode === 13) {\n        if (e.target.value !== this.props.value) return this.props.onChange(e);\n      }\n    };\n\n    this.handleBlur = e => {\n      if (e.target.value !== this.props.value) return this.props.onChange(e);\n    };\n\n    this.state = {\n      value: props.value\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.value !== this.props.value) {\n      this.setState({\n        value: nextProps.value\n      });\n    }\n  }\n\n  render() {\n    const value = this.state.value;\n    return React.createElement(Input, Object.assign({}, this.props, {\n      value: value,\n      onKeyUp: this.onKeyup,\n      onBlur: this.handleBlur,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }));\n  }\n\n}\nFieldInput.propTypes = {\n  onChange: PropTypes.func,\n  value: PropTypes.string\n};","map":{"version":3,"sources":["/Users/novelistchan/Documents/sddm-component/json-schema-editor/src/components/editor/components/SchemaComponents/FieldInput.js"],"names":["React","PureComponent","PropTypes","Input","FieldInput","constructor","props","handleChange","e","value","target","setState","onKeyup","keyCode","onChange","handleBlur","state","componentWillReceiveProps","nextProps","render","propTypes","func","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAAQC,KAAR,QAAoB,MAApB;AAEA,eAAe,MAAMC,UAAN,SAAyBH,aAAzB,CAAuC;AAMpDI,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;;AADgB,SAOlBC,YAPkB,GAOHC,CAAD,IAAK;AACjB,UAAIC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAArB;AACA,WAAKE,QAAL,CAAc;AACZF,QAAAA;AADY,OAAd;AAGD,KAZiB;;AAAA,SAsBlBG,OAtBkB,GAsBTJ,CAAC,IAAG;AACX,UAAGA,CAAC,CAACK,OAAF,KAAc,EAAjB,EAAqB;AACnB,YAAGL,CAAC,CAACE,MAAF,CAASD,KAAT,KAAmB,KAAKH,KAAL,CAAWG,KAAjC,EAAuC,OAAO,KAAKH,KAAL,CAAWQ,QAAX,CAAoBN,CAApB,CAAP;AACxC;AACF,KA1BiB;;AAAA,SA4BlBO,UA5BkB,GA4BJP,CAAD,IAAK;AAChB,UAAGA,CAAC,CAACE,MAAF,CAASD,KAAT,KAAmB,KAAKH,KAAL,CAAWG,KAAjC,EAAuC,OAAO,KAAKH,KAAL,CAAWQ,QAAX,CAAoBN,CAApB,CAAP;AACxC,KA9BiB;;AAEhB,SAAKQ,KAAL,GAAa;AACXP,MAAAA,KAAK,EAAEH,KAAK,CAACG;AADF,KAAb;AAGD;;AASDQ,EAAAA,yBAAyB,CAACC,SAAD,EAAW;AAClC,QAAGA,SAAS,CAACT,KAAV,KAAoB,KAAKH,KAAL,CAAWG,KAAlC,EAAwC;AACtC,WAAKE,QAAL,CAAc;AACZF,QAAAA,KAAK,EAAES,SAAS,CAACT;AADL,OAAd;AAGD;AACF;;AAYDU,EAAAA,MAAM,GAAG;AAAA,UACAV,KADA,GACS,KAAKO,KADd,CACAP,KADA;AAGP,WACE,oBAAC,KAAD,oBAAY,KAAKH,KAAjB;AAAwB,MAAA,KAAK,EAAEG,KAA/B;AAAsC,MAAA,OAAO,EAAE,KAAKG,OAApD;AAA6D,MAAA,MAAM,EAAE,KAAKG,UAA1E;AAAsF,MAAA,QAAQ,EAAE,KAAKR,YAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAGD;;AA5CmD;AAAjCH,U,CACZgB,S,GAAY;AACjBN,EAAAA,QAAQ,EAAEZ,SAAS,CAACmB,IADH;AAEjBZ,EAAAA,KAAK,EAAEP,SAAS,CAACoB;AAFA,C","sourcesContent":["import React, { PureComponent } from 'react'\nimport PropTypes from 'prop-types'\nimport {Input} from 'antd'\n\nexport default class FieldInput extends PureComponent {\n  static propTypes = {\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n  }\n\n  constructor(props){\n    super(props)\n    this.state = {\n      value: props.value\n    }\n  }\n\n  handleChange =(e)=>{\n    let value = e.target.value;\n    this.setState({\n      value\n    })\n  }\n\n  componentWillReceiveProps(nextProps){\n    if(nextProps.value !== this.props.value){\n      this.setState({\n        value: nextProps.value\n      })\n    }\n  }\n\n  onKeyup= e=> {\n    if(e.keyCode === 13) {\n      if(e.target.value !== this.props.value)return this.props.onChange(e)\n    }\n  }\n\n  handleBlur = (e)=>{\n    if(e.target.value !== this.props.value)return this.props.onChange(e)\n  }\n\n  render() {\n    const {value} = this.state;\n\n    return (\n      <Input  {...this.props} value={value} onKeyUp={this.onKeyup} onBlur={this.handleBlur} onChange={this.handleChange} />\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}